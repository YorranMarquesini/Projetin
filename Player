package com.projeto.entidades;

import java.awt.Graphics;
import java.awt.image.BufferedImage;

import com.projeto.main.Jogo;
import com.projeto.world.Camera;
import com.projeto.world.world;

public class Player extends entidades {

	public boolean right,left,up,down;
	public int right_dir = 0, left_dir = 1;
	public int up_dir = 2, down_dir = 3;
	public int dir = right_dir;
	public double speed = 2;
	
	public int frames = 0,maxFrames = 8,index = 0,maxIndex = 4;
	private boolean moved = false;
	private BufferedImage[] rightPlayer;
	private BufferedImage[] leftPlayer;
	private BufferedImage[] upPlayer;
	private BufferedImage[] downPlayer;
	
	public Player(int x, int y, int altura, int largura, BufferedImage sprite) {
		super(x, y, altura, largura, sprite);
		
		rightPlayer = new BufferedImage[5];
		leftPlayer = new BufferedImage[5];
		upPlayer = new BufferedImage[5];
		downPlayer = new BufferedImage[5];
		for(int i = 0; i<5; i++) {
		rightPlayer[i] = Jogo.spritesheet.getSprite(0 + (i*64), 192, 64, 64);
		}
		for(int i = 0; i<5; i++) {
			leftPlayer[i] = Jogo.spritesheet.getSprite(0 + (i*64), 128, 64, 64);
			}
		for(int i = 0; i<5; i++) {
			upPlayer[i] = Jogo.spritesheet.getSprite(0 + (i*64), 64, 64, 64);
			}
		for(int i = 0; i<5; i++) {
			downPlayer[i] = Jogo.spritesheet.getSprite(0 + (i*64), 0, 64, 64);
			}
	}
	
	public void tick() {
		moved = false;
		if(right) {
			moved = true;
			dir = right_dir;
			x+=speed;
		}else if(left) {
			moved = true;
			dir = left_dir;
			x-=speed;
		}
		if (up) {
			moved = true;
			dir = up_dir;
			y-=speed;
		}else if(down) {
			moved = true;
			dir = down_dir;
			y+=speed;
		}
		
		if(moved) {
			frames++;
			if(frames == maxFrames) {
				frames = 0;
				index++;
				if(index > maxIndex) {
					index = 0;
				}
			}
		}
		
		Camera.x = Camera.clamp(this.GetX() - (Jogo.altura/2), 0,world.altura*64 - Jogo.altura);
		Camera.y = Camera.clamp(this.GetY() - (Jogo.largura/2), 0,world.largura*64 - Jogo.largura);
	}
	
	public void render(Graphics g) {
		if(dir == right_dir) {
			g.drawImage(rightPlayer[index], this.GetX() - Camera.x, this.GetY() - Camera.y,null);
		}else if(dir == left_dir) {
			g.drawImage(leftPlayer[index], this.GetX() - Camera.x, this.GetY() - Camera.y,null);
		}
		if(dir == up_dir) {
			g.drawImage(upPlayer[index], this.GetX()- Camera.x, this.GetY()- Camera.y,null);
		}else if(dir == down_dir) {
			g.drawImage(downPlayer[index], this.GetX()- Camera.x, this.GetY()- Camera.y,null);
		}
	}
	
}
